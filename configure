# Anticonf (tm) script by Jeroen Ooms, Jim Hester (2017)

echo "** Running ./configure"

# Dynamic manual pages
export RBIN="${R_HOME}/bin${R_ARCH_BIN}/R"
"$RBIN" --vanilla --slave -f tools/dynamic-help.R

# This script will query 'pkg-config' for the required cflags and ldflags.
# If pkg-config is unavailable or does not find the library, try setting
# INCLUDE_DIR and LIB_DIR manually via e.g:
# R CMD INSTALL --configure-vars='INCLUDE_DIR=/.../include LIB_DIR=/.../lib'

if [ `uname` = "Darwin" ]; then
    if [ `arch` = "arm64" ]; then
        if ${R_HOME}/bin/R --version | grep Platform | grep -q darwin20; then
            PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/opt/R/arm64/lib/pkgconfig
        fi
        PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/opt/homebrew/opt/libarchive/lib/pkgconfig
    else
        if ${R_HOME}/bin/R --version | grep Platform | grep -q darwin20; then
            PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/opt/R/x86_64/lib/pkgconfig
        fi
        PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/opt/libarchive/lib/pkgconfig
    fi
fi

export PKG_CONFIG_PATH

# library settings
PKG_CONFIG_NAME="libarchive"
PKG_CONFIG_NAME_BREW="libarchive zstd"
PKG_DEB_NAME="libarchive-dev"
PKG_RPM_NAME="libarchive-devel"
PKG_CSW_NAME="libarchive_dev"
PKG_BREW_NAME="libarchive"
PKG_TEST_HEADER="<archive.h>"
PKG_LIBS="-larchive"

# Use pkg-config if available
pkg-config ${PKG_CONFIG_NAME} --atleast-version=1.0  2>/dev/null
if [ $? -eq 0 ]; then
  PKGCONFIG_CFLAGS=`pkg-config --cflags ${PKG_CONFIG_NAME}`
  if [ `uname` = "Darwin" ]; then
    if pkg-config --path libarchive | grep -q "^/opt/R"; then
      PKGCONFIG_LIBS=`pkg-config --libs --static ${PKG_CONFIG_NAME}`
    else
      PKGCONFIG_LIBS=`pkg-config --libs ${PKG_CONFIG_NAME}`
    fi
  else
    PKGCONFIG_LIBS=`pkg-config --libs ${PKG_CONFIG_NAME}`
  fi
fi

# Note that cflags may be empty in case of success
if [ "$INCLUDE_DIR" ] || [ "$LIB_DIR" ]; then
  echo "Found INCLUDE_DIR and/or LIB_DIR!"
  PKG_CFLAGS="-I$INCLUDE_DIR $PKG_CFLAGS"
  PKG_LIBS="-L$LIB_DIR $PKG_LIBS"
elif [ "$PKGCONFIG_CFLAGS" ] || [ "$PKGCONFIG_LIBS" ]; then
  echo "Found pkg-config cflags and libs!"
  PKG_CFLAGS=${PKGCONFIG_CFLAGS}
  PKG_LIBS=${PKGCONFIG_LIBS}
elif [ `uname` = "Darwin" ]; then
  test ! "$CI" && brew --version 2>/dev/null
  if [ $? -eq 0 ]; then
    BREWDIR=`brew --prefix`
    PKG_CFLAGS="-I$BREWDIR/opt/libarchive/include"
    PKG_LIBS="-L$BREWDIR/opt/libarchive/lib $PKG_LIBS"
  else
    curl -sfL "https://autobrew.github.io/scripts/$PKG_BREW_NAME" > autobrew
    . ./autobrew
  fi
fi

# Find compiler
CXX11=`${R_HOME}/bin/R CMD config CXX11`
CXX11FLAGS=`${R_HOME}/bin/R CMD config CXX11FLAGS`
CPPFLAGS=`${R_HOME}/bin/R CMD config CPPFLAGS`

if [ "`${R_HOME}/bin/R --slave -e 'cat(if (getRversion() < \"3.6.3\") 0 else 1)'`" = "0" ]; then
    PKG_CFLAGS="${PKG_CFLAGS} `${R_HOME}/bin/R CMD config CXX11STD`"
fi

# For debugging
echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
echo "PKG_CFLAGS=$PKG_CFLAGS"
echo "PKG_LIBS=$PKG_LIBS"

# Test configuration
echo "#include $PKG_TEST_HEADER" | ${CXX11} ${CPPFLAGS} ${PKG_CFLAGS} ${CXX11FLAGS} -E -xc++ - > /dev/null

# Customize the error
if [ $? -ne 0 ]; then
  echo "--------------------------- [ANTICONF] --------------------------------"
  echo "Configuration failed because $PKG_CONFIG_NAME was not found. Try installing:"
  echo " * deb: $PKG_DEB_NAME (Debian, Ubuntu, etc)"
  echo " * rpm: $PKG_RPM_NAME (Fedora, CentOS, RHEL)"
  echo " * csw: $PKG_CSW_NAME (Solaris)"
  echo " * brew: $PKG_BREW_NAME (Mac OSX)"
  echo "If $PKG_CONFIG_NAME is already installed, check that 'pkg-config' is in your"
  echo "PATH and PKG_CONFIG_PATH contains a $PKG_CONFIG_NAME.pc file. If pkg-config"
  echo "is unavailable you can set INCLUDE_DIR and LIB_DIR manually via:"
  echo "R CMD INSTALL --configure-vars='INCLUDE_DIR=... LIB_DIR=...'"
  if [ -f configure.log ]; then
    echo "-------------------------- [ERROR MESSAGE] ---------------------------"
    cat configure.log;
  fi
  echo "--------------------------------------------------------------------"
  exit 1
fi

# Write to Makevars
sed -e "s|@PKG_CXXFLAGS@|$PKG_CFLAGS|" -e "s|@PKG_LIBS@|$PKG_LIBS|" src/Makevars.in > src/Makevars

# Success
exit 0
